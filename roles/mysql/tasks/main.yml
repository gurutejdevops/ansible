    - name: Ensure CentOS vault base repo is in place
      ansible.builtin.copy:
        src: centos.repo
        dest: /etc/yum.repos.d/CentOS-Base.repo
        backup: yes
    
# 1) Put the MySQL 5.7 repo file in place (so yum can find 5.7 packages)
    - name: Add MySQL 5.7 yum repo
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/stans-robot-project/mysql/main/mysql.repo
        dest: /etc/yum.repos.d/mysql.repo
        mode: '0644'

    # 2) Make sure EPEL is present (provides python PyMySQL on EL7)
    - name: Install EPEL repository
      ansible.builtin.yum:
        name: epel-release
        state: present

    - name: Remove any existing MySQL 8.0 packages
      ansible.builtin.yum:
        name:
          - mysql-community-client
          - mysql-community-server
          - mysql-community-common
          - mysql-community-libs
          - mysql-community-client-plugins
        state: absent
        autoremove: yes

    # 3) Install server + unzip + PyMySQL driver used by community.mysql modules
    - name: Install MySQL server, unzip, and PyMySQL driver
      ansible.builtin.yum:
        name:
          - mysql-community-server
          - unzip
          - python2-PyMySQL         # EL7 target; provides the DB driver
        state: present
        update_cache: yes

    # 4) Start MySQL and enable on boot
    - name: Enable and start mysqld
      ansible.builtin.service:
        name: mysqld
        state: started
        enabled: yes

    # 5) Wait until port 3306 is listening so we can talk to MySQL
    - name: Wait for MySQL port 3306 to be ready
      ansible.builtin.wait_for:
        host: 127.0.0.1
        port: 3306
        state: started
        timeout: 60

    - name: Read Mysql log
      ansible.builtin.slurp:
        path: /var/log/mysqld.log
      register: mysqld_log_raw

    - name: print the content
      ansible.builtin.debug:
        msg: "The output is {{ mysqld_log_raw }}"
    
    - name: Extract temporary root password from log
      ansible.builtin.set_fact:
        mysql_temp_password: >-
          {{ (mysqld_log_raw.content | b64decode) | regex_search('temporary password.*: ([\\w\\W]*?)\\n', '\\1') | trim }}

    - name: Set MySQL root password to RoboShop@1
      community.mysql.mysql_user:
        name: root
        host: localhost
        password: "RoboShop@1"
        login_user: root
        login_password: "{{ mysql_temp_password }}"
        check_implicit_admin: false
        state: present

    - name: Uninstall validate_password plugin (ignore if already absent)
      community.mysql.mysql_query:
        login_user: root
        login_password: "RoboShop@1"
        query: "UNINSTALL PLUGIN validate_password;"
      ignore_errors: yes

    